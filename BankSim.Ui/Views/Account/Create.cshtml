@{
    ViewData["Title"] = "Yeni Hesap Aç";
    var currencyOptions = ViewBag.CurrencyOptions as List<SelectListItem>;
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow rounded-4 border-0 p-4" style="background: #f9fbfd;">
                <h3 class="fw-bold mb-4 text-center" style="color:#003366;">Yeni Hesap Aç</h3>
                <form id="createAccountForm" autocomplete="off">
                    <div class="mb-3">
                        <label for="currency" class="form-label">Döviz Türü</label>
                        <select id="currency" class="form-select rounded-3" required>
                            <option value="">Seçiniz</option>
                            @foreach (var c in currencyOptions)
                            {
                                <option value="@c.Value">@c.Text</option>
                            }
                        </select>
                        <div class="text-danger" id="currencyError"></div>
                    </div>
                    <div class="d-flex justify-content-between mt-4">
                        <a href="/Account/Index" class="btn btn-outline-secondary rounded-3 px-4">Vazgeç</a>
                        <button type="submit" class="btn btn-success rounded-3 px-4 shadow-sm">Hesap Aç</button>
                    </div>
                </form>
                <div class="mt-3">
                    <span id="resultMsg" class="fw-bold"></span>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function parseJwt(token) {
            try {
                const base64Url = token.split('.')[1];
                const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
                const jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {
                    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
                }).join(''));
                return JSON.parse(jsonPayload);
            } catch { return {}; }
        }

        document.getElementById('createAccountForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            const currency = document.getElementById('currency').value;

       
            if (!currency) {
                document.getElementById('currencyError').innerText = "Döviz türü seçiniz!";
                return;
            } else {
                document.getElementById('currencyError').innerText = "";
            }

           
            const token = sessionStorage.getItem('token');
            if (!token) {
                window.location.href = '/Login/Index';
                return;
            }
            const jwt = parseJwt(token);
            const customerId = jwt.nameid || jwt.sub || jwt.id || jwt.customerId;
            if (!customerId) {
                document.getElementById('resultMsg').innerText = "Kullanıcı kimliği çözülemedi!";
                document.getElementById('resultMsg').classList.add('text-danger');
                return;
            }

         
            const body = {
                customerId: customerId,
                currency: currency
            };

            const url = window.API_BASE_URL + '/api/account';

     
            try {
                const resp = await fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': 'Bearer ' + token
                    },
                    body: JSON.stringify(body)
                });

                if (resp.ok) {
                    document.getElementById('resultMsg').innerText = "Hesap başarıyla açıldı!";
                    document.getElementById('resultMsg').classList.remove('text-danger');
                    document.getElementById('resultMsg').classList.add('text-success');
                    setTimeout(() => {
                        window.location.href = "/Account/Index";
                    }, 1200);
                } else {
                    const err = await resp.text();
                    document.getElementById('resultMsg').innerText = "Hesap açılamadı: " + err;
                    document.getElementById('resultMsg').classList.remove('text-success');
                    document.getElementById('resultMsg').classList.add('text-danger');
                }
            } catch (ex) {
                document.getElementById('resultMsg').innerText = "Bir hata oluştu: " + ex;
                document.getElementById('resultMsg').classList.remove('text-success');
                document.getElementById('resultMsg').classList.add('text-danger');
            }
        });
    </script>
}
